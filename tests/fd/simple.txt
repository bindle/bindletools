# this is a UTF-8 text file used to test the file parsing methods of
# the file parsing functions.
 
# Test 1: The first test is whether the functions can handle a file that
# is larger than the functions' input buffer of the functions. In order to
# to perform this test, the file needs to be at least twice as large os the
# input buffer.  At the time of this writing, the input buffer is only 256
# bytes long. So now I am rambling simply to get the size of the file up to
# at least 256 bytes. As of now... I need one more byte, so I guess I went
# over a little.

# Test 2: The second test is to strip the carriage returns from dos
# formatted text files. Since most POSIX programs do not use the <CRLF>
# terminator, I have to add a few extra lines with this line ending.

# Test 3: This test checks the line wrap mechanism which is triggered by
# using a space/tab at the beginning of a line to indicate a line
# continuation.
This is an example of an extended long line using the white space at the
 beginning of a line to indicate the the line continues.
This is an other uncreative example of an extended long line using white
	space (tab) at the beginning of the line.
This is an example of of using the extended long line using multiple white
 	 space characters at the beginning of a line.
This is the last example of using the extended long line uing multiple
 	white space at the beginning of the line.

# Test 4: This test checks the line wrap mechanism which is triggered by
# using a back slash '\\' at the end of a line to indicate the
# continuation of a line.
This line goes for a very very very long time with the use of the back \
slash to continue the line. I really believe this is could possible cause \
some problems, but we will see when we run the test.
I think that was long enough for one line, so I'll start a second run \
on sentence just to verify that this works with multiple long lines using \
the back slash to indicate a line continuation.
