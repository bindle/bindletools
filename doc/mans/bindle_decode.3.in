.\"
.\" Bindle Binaries Tools
.\" Copyright (C) 2022 David M. Syzdek <david@syzdek.net>.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions are
.\" met:
.\"
.\"    * Redistributions of source code must retain the above copyright
.\"      notice, this list of conditions and the following disclaimer.
.\"    * Redistributions in binary form must reproduce the above copyright
.\"      notice, this list of conditions and the following disclaimer in the
.\"      documentation and/or other materials provided with the distribution.
.\"    * Neither the name of David M. Syzdek nor the
.\"      names of its contributors may be used to endorse or promote products
.\"      derived from this software without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
.\" IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
.\" THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL DAVID M. SYZDEK BE LIABLE FOR
.\" ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
.\" SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
.\" CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.TH "BINDLE_ARRAY" "3" "@RELEASE_MONTH@" "@PACKAGE_NAME@" "Library Functions Manual"
.SH NAME
bindle_badd, bindle_bsearch, bindle_bremove, bindle_bindex - Bindle Binary Tools sorted array routines

.SH LIBRARY
Bindle Binaries Tools (libbindle, -lbindle)

.SH SYNOPSIS
.nf
\fB#include\fR \fB<bindle.h>\fR
.sp
.BI "ssize_t bindle_decode( int " method ", void * " dst ", size_t " s ","
.BI "           const char * " src ", size_t " n " );"
.sp
.BI "ssize_t bindle_decode_size( int " method ", size_t " n " );"
.sp
.BI "ssize_t bindle_encode( int " method ", char * " dst ", size_t " s ","
.BI "           const void * " src ", size_t " n ", int " nopad " );"
.sp
.BI "ssize_t bindle_encode_size( int " method ", size_t " n " );"
.sp
.BI "ssize_t bindle_encoding_verify( int " method ", const char * " src ","
.BI "           size_t " n " );"
.sp
.BI "int bindle_encoded_char( int " method ", char " c " );"

.SH DESCRIPTION
\fBbindle_decode\fR() decodes \fIn\fR bytes from \fIsrc\fR into \fIdst\fR
buffer of \fIs\fR bytes according to the method specified by \fImethod\fR.
\fBbindle_decode_size\fR() calculates the number of bytes required to decode
\fIn\fR bytes of data encoded according to the method specified by
\fImethod\fR.
.sp
Valid values of \fImethod\fR are:
.RS 6
.TP 20
.B BNDL_NONE
copy data without an encoding method.
.TP 20
.B BNDL_BASE32
use base32 string encoding (RFC4648)
.TP 20
.B BNDL_BASE32HEX
use base32hex string encoding (RFC4648)
.TP 20
.B BNDL_BASE64
use base64 string encoding (RFC4648)
.TP 20
.B BNDL_HEX
use base16 string encoding (RFC4648)
.TP 20
.B BNDL_CROCKFORD
use Crockford's base32 string encoding
.TP 20
.B BNDL_PCTENC
use percent-encoding/URL string encoding
.RE
.PP
\fBbindle_encode\fR() decodes \fIn\fR bytes from \fIsrc\fR into \fIdst\fR
buffer of \fIs\fR bytes according to the method specified by \fImethod\fR.
\fBbindle_encode\fR() will omit padding in the encoded data if \fInopad\fR is
not 0. The result stored in \fIdst\fR will be a NULL terminated string.
\fBbindle_encode_size\fR() calculates the number of bytes required to
encode \fIn\fR bytes of data according to the method specified by
\fImethod\fR.
.sp
\fBbindle_encoding_verify\fR() verifies that \fIn\fR bytes of data in
\fIsrc\fR are encoded according to encoding specified by \fImethod\fR.
.sp
\fBbindle_encoded_char\fR() returns the value of the encoded character \fIc\fR
for \fImethod\fR.

.SH RETURN VALUES
If successful \fBbindle_decode\fR() and \fBbindle_encode\fR() return the
number of bytes encoded or decoded into \fIdst\fR. If an error occurs, errno
is set and -1 is returned.
.sp
If successful \fBbindle_decode_size\fR() and \fBbindle_encode_size\fR() return
the number of bytes required to encode or decode \fIn\fR bytes of data. If an
error occurs, errno is set and -1 is returned.
.sp
\fBbindle_encoding_verify\fR() returns 0 if the data is correctly encoded. If
an error occurred, errno is set and -1 is returned.
.sp
\fBbindle_encoded_char\fR() returns the value of the specified character if
\fIc\fR is a valid encoded character for \fImethod\fR or returns -1 if \fIc\fR
is not a valid encoded character.

.SH SEE ALSO
.BR bindletools (3)

.SH AUTHOR
David M. Syzdek <david@syzdek.net>

.SH ACKNOWLEDGEMENTS
\fB@PACKAGE_NAME@\fR is developed and maintained by David M. Syzdek
<david@syzdek.net>.

.\" end of man page
